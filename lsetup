#!/bin/sh
############################################
# Program	: Linux Setup Script
# Author	: Chauncey Yan
# Features	: List the info. of the system. 
#             Prompt to setup shell, vim, 
#             git, and tmux.
# Revision	: 0.1
# Mod date	: Oct 10 2016
# Updates	:
# Issues	:
############################################
# Name      : check system information
# Issues	:
############################################
check_sys (){
    # system report
    echo "################################";
    echo "Checking system configurations."
    host_name=`uname -n`
    system=`uname -o`
    kernel=`uname -s`
    kernel_release=`uname -r`
    echo "################################";
    echo "Hostname : $host_name";
    echo "System   : $system";
    echo "Kernel   : $kernel";
    echo "Release  : $kernel_release";

    #case $system in 
    #    "Cygwin") echo System: Cygwin;;
#        *) echo Else;;
#esac

#type uptime >/dev/null 2>&1 || { echo >&2 "No uptime!"; exit 1; }
#type hostname >/dev/null 2>&1 || { echo >&2 "No hostname!"; exit 1; }
#uname_return=$(uname -a)
#system=$(echo $uname_return | awk 'NF>1{print $NF}')
return ;
}
############################################
# setup shell bashrc zshrc
# setup .aliases
# setup autpo start
############################################
shell_setup(){
    echo "################################";
    echo "\$SHELL   : $SHELL"
    echo "env check";
    echo "\$PATH check";
    echo "\$HOME check";
    echo "################################";
    shell=`basename $SHELL`
    if [[ -f "$HOME/.${shell}rc" ]];then
        echo "Found .${shell}rc in ${HOME}.";
        echo "Type 1 for swap the files."
        echo "Type 2 for merge two .${shell}rc."
        while true; do
            read sm
            case $sm in
                1 ) file_swap $HOME/.${shell}rc $SRC/configfiles/.${shell}rc;
                    break;;
                2 ) file_merge $HOME/.${shell}rc $SRC/configfiles/.${shell}rc;
                    break;;
                * ) echo "Please answer 1 or 2.";;
            esac
        done
    else
        echo "Copied .${shell}rc file to $HOME";
        cp $SRC/configfiles/${shell}rc $HOME
    fi
    return
}
############################################
# setup vimrc 
# setup vim plugin
# populate vim colors
############################################
vim_setup(){
    echo "################################";
    echo vim setup;
}
############################################
# setup git shortcuts, name, email, ssh
############################################
git_setup(){
    echo "################################";
    echo git setup;
}
############################################
# setup tmux config
############################################
tmux_setup(){
    echo "################################";
    echo tmux setup;
}

############################################
# file merge 
# diff then merge the differences
############################################
file_merge(){
    echo "################################";
    echo File merged between
    echo $1 
    echo $2
    return
}
############################################
# file merge 
# diff then merge the differences
############################################
file_swap(){
    echo "################################";
    echo File swapped between
    echo $1 
    echo $2
    cp $1 ${1}.bak
    echo ${1}.bak created.
    return
}
############################################
############################################
# Main		:
# Issues	:
############################################
echo "Linux Setup Script. Version 0.1."
check_sys;
shell_setup;
vim_setup;
git_setup;
tmux_setup;
#source $HOME/.${shell}rc
exit;
############################################
# example code
############################################
#if [[ -z $var ]];then # -n for not empty
#	echo var is empty
#fi
#for i in $(seq 1 2 20);do
#	echo number $i
#done



